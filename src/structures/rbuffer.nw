\documentclass[10pt]{article}
\usepackage{noweb}
\noweboptions{smallcode,longchunks}

\begin{document}
\pagestyle{noweb}

\section{rbuffer}

C'est un buffer tournant le plus simple possible, capable de gérer des lignes
délimitées par \emph{LF} (\texttt{'\\n'}) mais \emph{CR} (\texttt{'\\r'}) n'est pas pris en compte.

\subsection{premières définitions}
Pour limiter les calcus, le code..., la taille du buffer est une puissance de 2
d'où la définition du nombre de bits qui ouvre le bal :

<<intro-bits>>=
/**
 * @def _RBUFFER_BITS
 * La taille du tampon doit �tre une puissance de 2. _RBUFFER_BITS est ce nombre.
 *
 * @def RBUFFER_SIZE
 * La taille du tampon.
 *
 * @def RBUFFER_MASK
 * La taille du tampon d�cr�ment�e de 1.
 */
#define _RBUFFER_BITS   8
#define RBUFFER_SIZE    (1 << _RBUFFER_BITS)
#define RBUFFER_MASK    (RBUFFER_SIZE - 1)

@
Il reste encore du travail...

<<*>>=
/**
 * @struct TSrbuffer
 * La structure g�rant le buffer tournant.
 */
typedef struct {
    volatile int in; /**< index du caract�re � ajouter */
    volatile int out; /**< index du caract�re � sortir */
    volatile int line_count; /**< nombre de lignes contenues dans le tampon */
    volatile char buffer[RBUFFER_SIZE]; /**< le tampon */
} TSrbuffer;
